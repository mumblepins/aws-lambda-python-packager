image: python:3.9

.base:
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.cache/poetry"
    PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
  cache:
    paths:
      - .cache/pip
      - .cache/poetry
      - .cache/pre-commit

  before_script:
    - python -VV
    - pip install poetry pre-commit
    - poetry install --sync

pre_commit:
  extends: .base
  script:
    - poetry run pre-commit run --all-files

test:
  extends: .base
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        - pyproject.toml
        - poetry.lock
        - src/**/*
        - tests/**/*
  script:
    - poetry run pytest "tests/"
      -n 4
      --dist worksteal
      --reruns 3
      --verbose
      --cov=aws_lambda_python_packager
      --pyargs "aws_lambda_python_packager"
      --cov-report=html --cov-report=term --cov-report=xml
      --junitxml=junit.xml
  parallel:
    matrix:
      - ARCH: [x86-64, arm]
  tags:
    - $ARCH
  coverage: '/Total coverage: \d+\.\d+%/'
  artifacts:
    paths:
      - htmlcov
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: junit.xml

build:
  extends: .base
  stage: deploy
  script:
    - poetry build
  rules:
    - if: $CI_COMMIT_BRANCH

  artifacts:
    paths:
      - dist

publish:
  extends: .base
  stage: deploy
  script:
    - rm -rf dist
    - poetry build
    - pip install twine
    - twine upload dist/*.*
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+/

include:
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/SAST-IaC.gitlab-ci.yml
  - template: Jobs/Secret-Detection.gitlab-ci.yml

sast:
  stage: test
  tags:
    - x86-64

iac-sast:
  tags:
    - x86-64

secret_detection:
  tags:
    - x86-64
