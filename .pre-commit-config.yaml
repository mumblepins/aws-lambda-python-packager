exclude: ^(buildspec.yml|.pre-commit-config.yaml)$
fail_fast: false
default_install_hook_types: [ pre-commit, post-commit ]
repos:
  - repo: https://github.com/python-poetry/poetry
    rev: 1.2.0
    hooks:
      - id: poetry-lock
        args: [ "--check" ]
        files: "(pyproject.toml|poetry.lock)"
  - repo: https://github.com/pycqa/isort
    rev: 5.10.1
    hooks:
      - id: isort
  - repo: https://github.com/ambv/black
    rev: 22.8.0
    hooks:
      - id: black
        language_version: python3
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-json
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-toml
      - id: check-yaml
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: "[CHANGELOG.md]"
      - id: fix-encoding-pragma
      - id: mixed-line-ending
        args:
          - --fix=auto
      - id: pretty-format-json
        args:
          - --autofix
          - --indent=4
          - --no-sort-keys
        exclude: "[inputs.json|syntax_error.json]"
      - id: trailing-whitespace
  - repo: https://github.com/pycqa/flake8
    rev: 5.0.4
    hooks:
      - id: flake8
        args:
          - --config=.config/.flake8
        additional_dependencies:
          - flake8-bugbear>=19.3.0
          - flake8-builtins>=1.4.1
          - flake8-commas>=2.0.0
          - flake8-comprehensions>=2.1.0
          - flake8-debugger>=3.1.0
          - flake8-pep3101>=1.2.1
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.9.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-mock-methods
      - id: python-no-log-warn
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        files: "^src/"
  - repo: https://github.com/domdfcoding/flake2lint
    rev: v0.4.2
    hooks:
      - id: flake2lint
  - repo: https://github.com/mumblepins/dep_checker
    rev: v0.7.0
    hooks:
      - id: dep_checker
        args:
          - --req-file
          - pyproject.toml
          - src/aws_lambda_python_packager
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: 'v0.971'  # Use the sha / tag you want to point at
    hooks:
      - id: mypy
        args: [ '--config-file', 'pyproject.toml' ]
        files: '^(src/.*|[^/]*)\.py$'
        additional_dependencies:
          - types-requests
          - types-toml
          - types-colorama
          - types-setuptools
          - click
          - click_option_group
  - repo: local
    hooks:
      #      - id: mypy
      #        name: mypy
      #        entry: mypy
      #        language: system
      #        stages: [ manual ]
      #        pass_filenames: false
      #        args: [ "--config-file", "pyproject.toml","--no-incremental" ]
      - id: pylint
        name: pylint
        entry: >
          poetry run
          pylint
        language: system
        types: [ python ]
        args:
          [
            "-rn", # Only display messages
            "-sn", # Don't display the score
            "--extension-pkg-whitelist=pydantic",
            "--rcfile=.config/.pylintrc",
          ]
      - id: pytest-local
        name: pytest-local
        stages: [ manual ]
        description: Run pytest in the local virtualenv
        entry: >
          poetry run 
          pytest
          "tests/"
          -n auto
          --cov=aws_lambda_python_packager
          --pyargs "aws_lambda_python_packager"
          --cov-report=html
          --cov-report=term
          --cov-report=xml
        language: system
        # ignore all files, run on hard-coded modules instead
        pass_filenames: false
        always_run: true
        types: [ python ]
        verbose: true
  - repo: local
    hooks:
      - id: gitchangelog
        language: system
        always_run: true
        pass_filenames: false
        name: Generate changelog
        entry: poetry run bash -c "GITCHANGELOG_CONFIG_FILENAME='.config/.gitchangelog.rc' gitchangelog > CHANGELOG.md"
        stages: [ post-commit ]
