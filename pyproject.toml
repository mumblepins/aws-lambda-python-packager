[tool.poetry]
name = "aws-lambda-python-packager"
version = "1.3.0"
description = "Description"
authors = ["Daniel Sullivan <mumblepins@users.noreply.github.com>"]
license = "LGPL-3.0-or-later"
repository = "https://github.com/mumblepins/aws-lambda-python-packager/"
documentation = "https://mumblepins.github.io/aws-lambda-python-packager/"
readme = "README.md"
packages = [{ include = "aws_lambda_python_packager", from = "src" }]

[tool.poetry.scripts]
lambda-packager = "aws_lambda_python_packager.__main__:main"

[tool.poetry.dependencies]
python = "^3.8"
requests = "*"
python-certifi-win32 = { version = "*", markers = "platform_system == 'Windows'" }
fsspec = "*"
appdirs = "*"
aiohttp = "*"
toml = ">=0.10"
packaging = "*"
click = ">=8"
click-option-group = "*"
click-log = "*"
wheel = "*"

[tool.poetry.group.dev.dependencies]
pylint = "^2.13.0"
pytest = "^7.1.1"

coverage = "^6.3.2"
pre-commit = "^2.15.0"
Sphinx = "^4.4"
sphinx-rtd-theme = "^1.0"
pytest-cov = "^3.0.0"
pylint-pytest = "^1.1.2"
pytest-xdist = "^2.5.0"
myst-parser = "^0.17.2"

importlib-resources = { version = "^5.7.1", python = "<3.9" }
bump2version = "^1.0.1"
#pytest-randomly = "^3.12.0"


[tool.poetry.extras]

[build-system]
requires = ["poetry-core>=1.1.0b2"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.isort]
profile = "black"
skip_gitignore = true
line_length = 88
indent = "    "
multi_line_output = 3
skip = "env"
include_trailing_comma = true
combine_as_imports = true
force_grid_wrap = 3

[tool.black]
line-length = 100
include = '\.pyi?$'
target-version = ['py38', 'py39', 'py310']
exclude = '''
/(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.cache
  | env
  | venv
  | \.aws-sam
  | _build
  | buck-out
  | build
  | dist
)/
'''



[tool.mypy]
files = 'src/**/*.py'
exclude = '''(?x)(
      \.eggs
    | \.git          # root of the project
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.cache
  | env
  | venv
  | \.aws-sam
  | _build
  | buck-out
  | build
  | dist
  | package_
)'''


[[tool.mypy.overrides]]
module = "poetry.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "poetry_plugin_export.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cleo.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "appdirs.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fsspec.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "packaging.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "click_log.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "wheel.cli.*"
ignore_missing_imports = true

[tool.dep_checker]
allowed_unused = ["python_certifi_win32", 'aiohttp']
[tool.dep_checker.name_mapping]
setuptools = "pkg_resources"
